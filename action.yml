name: AWS SSM Parameters
description: Checks to see if exists, if not it will create it. If exist, it will check to see that is current and up to date.

branding:
  icon: refresh-cw
  color: orange

inputs:
  name:
    description: AWS SSM Parameter Name
    required: true
  value:
    description: AWS SSM Parameter Value
    required: true
  description:
    description: AWS SSM Parameter Description
    required: true
  tier:
    description: AWS SSM Parameter Tier
    required: false
    default: Standard
  type:
    description: AWS SSM Parameter Type
    required: false
    default: SecureString

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: pip

    - name: Create requirements.txt if it doesn't exist
      # Create an empty requirements.txt if this file (or pyproject.toml) doesn't exist.
      # This works around an issue with setup-python for non-Python projects, which ends up
      # with this error:
      #
      #   Run actions/setup-python@v5.0.0
      #     with:
      #       python-version: 3.12
      #       cache: pip
      #   Installed versions
      #     Successfully set up CPython (3.12.1)
      #   Error: No file in /home/runner/work/foo/foo matched to
      #   [**/requirements.txt or **/pyproject.toml], make sure you have checked out the target repository
      #
      # This has been reported at: https://github.com/actions/setup-python/issues/807
      # In the future this might be addressed by either:
      # https://github.com/actions/setup-python/pull/762
      # https://github.com/actions/setup-python/issues/751
      if: hashFiles('**/requirements.txt', '**/pyproject.toml') == ''
      shell: bash
      run: |
        touch ./requirements.txt

    - name: Install boto3
      run: pip install boto3
      shell: bash

    - name: Update SSM Parameter if needed
      shell: bash
      run: |
        ${{ github.action_path }}/ssm-parameter.py \
          --name "${{ inputs.name }}" \
          --value "${{ inputs.value }}" \
          --description "${{ inputs.description }}" \
          --tier "${{ inputs.tier }}" \
          --type "${{ inputs.type }}"
